from player import Player
import pygame  # Importing pygame for handling the game events

class HumanPlayer(Player):
    """
    This class represents the human player in the game. It inherits from the Player base class.
    It defines the specific behavior for making a move as a human player.
    """

    def _make_move(self, event, board, renderer, logger):
        """
        Handles the human player's move. The move is made by clicking on the board's cells.

        Args:
            event (pygame event): The event generated by the mouse click.
            board (list): The current Tic-Tac-Toe board (3x3 grid or larger).
            renderer (Renderer): The instance responsible for rendering the game elements.
            logger (Logger): The instance responsible for logging the moves.

        Returns:
            bool: True if the move was successfully made, False otherwise.
        """

        # Check if the event is a mouse button click
        if event.type == pygame.MOUSEBUTTONDOWN:
            mouseX, mouseY = event.pos

            # Calculate the column and row based on the mouse position and square size
            col = mouseX // renderer.square_size
            row = mouseY // renderer.square_size

            # Ensure the selected cell is within bounds and empty (denoted by 0)
            if 0 <= row < len(board) and 0 <= col < len(board) and board[row][col] == 0:
                board[row][col] = self.symbol  # Assign the human player's symbol

                # Log the move: Dynamic position calculation based on the board size
                position = row * len(board) + col + 1

                logger._log_move(position, self.symbol)  # Log the move

                return True  # Return True indicating the move was made
        
        return False  # Return False if no valid move was made


